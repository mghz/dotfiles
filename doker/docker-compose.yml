version: '3'

services:

  cassandra:
    container_name: cassandra
    image: cassandra:latest
    command: /bin/bash -c "sleep 1 && echo '-- catch up -->' && /docker-entrypoint.sh cassandra -f"
    env_file:
      - ./config/dev.env
    ports:
      - 9042:9042
    # expose:
    #   - 7000:7000
    #   - 7001:7001
    #   - 7199:7199
    #   - 9042:9042
    #   - 9160:9160
    volumes:
      - cassandra:/var/lib/cassandra
    networks:
      - zarusnet

  postgres:
    container_name: postgres
    image: postgres
    env_file:
      - ./config/dev.env
    ports:
      - 5432:5432
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - zarusnet

  gitea:
    container_name: gitea
    image: gitea/gitea:latest
    env_file:
      - ./config/dev.env
    restart: always
    ports:
      - 3000:3000
      - 222:22
    volumes:
      - gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - postgres

volumes:
  cassandra:
  postgres:
  gitea:

networks:
  zarusnet:

  # janus:
  #   container_name: janus
  #   image: janusgraph/janusgraph:latest
  #   ports:
  #     - 8182:8182
  #     - 8184:8184
  #   depends_on:
  #     - cass1
  #     - elastic1
  #   env_file:
  #     - janus.env

    # environment:
    #   - JANUS_STORAGE_BACKEND=cql
    #   - JANUS_STORAGE_HOSTNAME=cass1
    #   - JANUS_INDEXES=elastic1
    #   - JANUS_INDEX_HOSTNAME=elastic1
    #   - JANUS_GREMLIN_CHANNELIZER=org.apache.tinkerpop.gremlin.server.channel.HttpChannelizer
    # networks:
    #   - zarusnet

  # elastic1:
  #   container_name: elastic1
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.4.1
  #   environment:
  #     - discovery.type=single-node
  #     - cluster.name=cluster1
  #     - bootstrap.memory_lock=true
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #   volumes:
  #     - elastic1:/usr/share/elasticsearch/data
  #   ports:
  #     - 9200:9200
  #   networks:
  #     - zarusnet

  # mysql:
  #   container_name: mysql
  #   image: mysql
  #   command: --default-authentication-plugin=mysql_native_password
  #   env_file:
  #     - ./dev.mysql.env
  #   ports:
  #     - 3306:3306
  #   volumes:
  #     - mysqldb:/var/lib/mysql
  #   networks:
  #     - zarusnet

  # kong:
  #   container_name: kong
  #   image: kong;latest
  #   ports:
  #   - 8000:8000
  #   - 8443:8443
  #   - 8001:8001
  #   - 8444:8444
  #   env-file:
  #     - ./keys.env
  #   networks:
  #     - zarusnet

  # pulsar:
  #   container_name: pulsar
  #   image: apachepulsar/pulsar:2.6.1
  #   command: bin/pulsar standalone
  #   volumes:
  #     - pulsardata:/pulsar/data
  #     - pulsarconf:/pulsar/conf
  #   ports:
  #     - 6650:6650
  #     - 8080:8080
  #   networks:
  #     - zarusnet

  # pulsar-manager:
  #   container_name: pulsar-manager
  #   image: apachepulsar/pulsar-manager:v0.2.0
  #   command: bin/pulsar standalone
  #   environment:
  #     - SPRING_CONFIGURATION_FILE=/pulsar-manager/pulsar-manager/application.properties apachepulsar/pulsar-manager:v0.2.0
  #   ports:
  #     - 9527:9527
  #     - 7750:7750
  #   networks:
  #     - zarusnet

  # zero:
  #   image: dgraph/dgraph:latest
  #   volumes:
  #     - dgraph:/dgraph
  #   ports:
  #     - 5080:5080
  #     - 6080:6080
  #   restart: on-failure
  #   command: dgraph zero --my=zero:5080
  # alpha:
  #   image: dgraph/dgraph:latest
  #   volumes:
  #     - dgraph:/dgraph
  #   ports:
  #     - 8080:8080
  #     - 9080:9080
  #   restart: on-failure
  #   command: dgraph alpha --my=alpha:7080 --lru_mb=2048 --zero=zero:5080
  # ratel:
  #   image: dgraph/dgraph:latest
  #   ports:
  #     - 8000:8000
  #   command: dgraph-ratel


  # reqheap:
  #   container_name: reqhea
  #   image: reqheap
  #   depends_on:
  #     - mysql
  #   ports:
  #     - '9001:80'
  #   volumes:
  #     - $PWD:/app
  #   networks:
  #     - zarusnet

  # phpmyadmin:
  #   container_name: phpmyadmin
  #   depends_on:
  #     - mysql
  #   image: phpmyadmin/phpmyadmin
  #   restart: always
  #   ports:
  #     - '9000:80'
  #   environment:
  #     PMA_HOST: mysql
  #     MYSQL_ROOT_PASSWORD: root
  #   networks:
  #     - zarusnet

  # adminer:
  #   container_name: adminer
  #   image: adminer
  #   # restart: always
  #   ports:
  #     - 8000:8080
  #   networks:
  #     - zarusnet
