version: "3.7"
services:
  #  janus:
  #    container_name: graph1
  #    image: janusgraph/janusgraph:latest
  #    ports:
  #      - 8182:8182
  #      - 8184:8184
  #    depends_on:
  #      - cas1
  #      - elastic1
  #    environment:
  #      - JANUS_STORAGE_BACKEND=cql
  #      - JANUS_STORAGE_HOSTNAME=cas1
  #      - JANUS_INDEXES=elastic1
  #      - JANUS_INDEX_HOSTNAME=es1
  #      - JANUS_GREMLIN_CHANNELIZER=org.apache.tinkerpop.gremlin.server.channel.HttpChannelizer
  #  cas1:
  #    container_name: cas1
  #    image: cassandra:latest
  #    command: /bin/bash -c "sleep 1 && echo ' -- Pausing to let system catch up ... -->' && /docker-entrypoint.sh cassandra -f"
  #    restart: always
  #    ports:
  #      - 7000:7000
  #      - 7001:7001
  #      - 7199:7199
  #      - 9042:9042
  #      - 9160:9160
  #    environment:
  #      - CASSANDRA_START_RPC=true
  #      - CASSANDRA_CLUSTER_NAME=cluster1
  #      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
  #      - CASSANDRA_DC=naeast
  #      - CASSANDRA_SEEDS=cas1
  #    volumes:
  #      - ./data/cassandra/cas1:/var/lib/cassandra/data
  #  elastic1:
  #    container_name: es1
  #    image: docker.elastic.co/elasticsearch/elasticsearch:7.4.1
  #    environment:
  #      - discovery.type=single-node
  #      - cluster.name=cluster1
  #      - bootstrap.memory_lock=true
  #      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
  #    volumes:
  #      - ./data/elasticsearch/data:/usr/share/elasticsearch/data
  #    ports:
  #      - 9200:9200

#  cas2:
#    container_name: cas2
#    image: cassandra:latest
#    volumes:
#      - ./data/cassandra/cas2:/var/lib/cassandra/data
#
#    ports:
#      - 9043:9042
#    command: bash -c 'sleep 60;  /docker-entrypoint.sh cassandra -f'
#    depends_on:
#      - cas1
#    environment:
#      - CASSANDRA_START_RPC=true
#      - CASSANDRA_CLUSTER_NAME=caluster
#      - CASSANDRA_ENDPOINT_SNITCH=GossipingPropertyFileSnitch
#      - CASSANDRA_DC=dcna
#      - CASSANDRA_SEEDS=cas1

#  zookeeper:
#    image: wurstmeister/zookeep
#
#  kafka:
#    build: .
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_CREATE_TOPICS: "test:1:1"
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
